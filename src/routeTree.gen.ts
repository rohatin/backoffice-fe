/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as protectedTransactionIndexImport } from './routes/(protected)/transaction/index'
import { Route as protectedadminUsersIndexImport } from './routes/(protected)/(admin)/users/index'
import { Route as protectedadminEditRolesIndexImport } from './routes/(protected)/(admin)/edit-roles/index'
import { Route as protectedadminUsersExpanedViewUserIdImport } from './routes/(protected)/(admin)/users/expaned-view.$userId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const protectedTransactionIndexRoute = protectedTransactionIndexImport.update({
  id: '/(protected)/transaction/',
  path: '/transaction/',
  getParentRoute: () => rootRoute,
} as any)

const protectedadminUsersIndexRoute = protectedadminUsersIndexImport.update({
  id: '/(protected)/(admin)/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const protectedadminEditRolesIndexRoute =
  protectedadminEditRolesIndexImport.update({
    id: '/(protected)/(admin)/edit-roles/',
    path: '/edit-roles/',
    getParentRoute: () => rootRoute,
  } as any)

const protectedadminUsersExpanedViewUserIdRoute =
  protectedadminUsersExpanedViewUserIdImport.update({
    id: '/(protected)/(admin)/users/expaned-view/$userId',
    path: '/users/expaned-view/$userId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/transaction/': {
      id: '/(protected)/transaction/'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof protectedTransactionIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/(admin)/edit-roles/': {
      id: '/(protected)/(admin)/edit-roles/'
      path: '/edit-roles'
      fullPath: '/edit-roles'
      preLoaderRoute: typeof protectedadminEditRolesIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/(admin)/users/': {
      id: '/(protected)/(admin)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof protectedadminUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/(admin)/users/expaned-view/$userId': {
      id: '/(protected)/(admin)/users/expaned-view/$userId'
      path: '/users/expaned-view/$userId'
      fullPath: '/users/expaned-view/$userId'
      preLoaderRoute: typeof protectedadminUsersExpanedViewUserIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginIndexRoute
  '/transaction': typeof protectedTransactionIndexRoute
  '/edit-roles': typeof protectedadminEditRolesIndexRoute
  '/users': typeof protectedadminUsersIndexRoute
  '/users/expaned-view/$userId': typeof protectedadminUsersExpanedViewUserIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginIndexRoute
  '/transaction': typeof protectedTransactionIndexRoute
  '/edit-roles': typeof protectedadminEditRolesIndexRoute
  '/users': typeof protectedadminUsersIndexRoute
  '/users/expaned-view/$userId': typeof protectedadminUsersExpanedViewUserIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login/': typeof LoginIndexRoute
  '/(protected)/transaction/': typeof protectedTransactionIndexRoute
  '/(protected)/(admin)/edit-roles/': typeof protectedadminEditRolesIndexRoute
  '/(protected)/(admin)/users/': typeof protectedadminUsersIndexRoute
  '/(protected)/(admin)/users/expaned-view/$userId': typeof protectedadminUsersExpanedViewUserIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/transaction'
    | '/edit-roles'
    | '/users'
    | '/users/expaned-view/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/transaction'
    | '/edit-roles'
    | '/users'
    | '/users/expaned-view/$userId'
  id:
    | '__root__'
    | '/'
    | '/login/'
    | '/(protected)/transaction/'
    | '/(protected)/(admin)/edit-roles/'
    | '/(protected)/(admin)/users/'
    | '/(protected)/(admin)/users/expaned-view/$userId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginIndexRoute: typeof LoginIndexRoute
  protectedTransactionIndexRoute: typeof protectedTransactionIndexRoute
  protectedadminEditRolesIndexRoute: typeof protectedadminEditRolesIndexRoute
  protectedadminUsersIndexRoute: typeof protectedadminUsersIndexRoute
  protectedadminUsersExpanedViewUserIdRoute: typeof protectedadminUsersExpanedViewUserIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginIndexRoute: LoginIndexRoute,
  protectedTransactionIndexRoute: protectedTransactionIndexRoute,
  protectedadminEditRolesIndexRoute: protectedadminEditRolesIndexRoute,
  protectedadminUsersIndexRoute: protectedadminUsersIndexRoute,
  protectedadminUsersExpanedViewUserIdRoute:
    protectedadminUsersExpanedViewUserIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login/",
        "/(protected)/transaction/",
        "/(protected)/(admin)/edit-roles/",
        "/(protected)/(admin)/users/",
        "/(protected)/(admin)/users/expaned-view/$userId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/(protected)/transaction/": {
      "filePath": "(protected)/transaction/index.tsx"
    },
    "/(protected)/(admin)/edit-roles/": {
      "filePath": "(protected)/(admin)/edit-roles/index.tsx"
    },
    "/(protected)/(admin)/users/": {
      "filePath": "(protected)/(admin)/users/index.tsx"
    },
    "/(protected)/(admin)/users/expaned-view/$userId": {
      "filePath": "(protected)/(admin)/users/expaned-view.$userId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
